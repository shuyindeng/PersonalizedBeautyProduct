{"ast":null,"code":"import Papa from 'papaparse';\nexport const getProducts = () => {\n  const data = fetch(\"https://julie-commerce.s3.us-west-2.amazonaws.com/moisturizer1_clean.csv\").then(response => response.text()).then(v => Papa.parse(v));\n  return data.then(product => {\n    const parts = product.split(',');\n    return {\n      name: parts[0],\n      brand: parts[1],\n      price: parts[2],\n      review: parts[3],\n      rating: parts[4],\n      description: parts[5],\n      skintype: parts[6],\n      productImageUrl: parts[7]\n    };\n  });\n};","map":{"version":3,"sources":["/Users/juliedeng/Commerce/src/products.ts"],"names":["Papa","getProducts","data","fetch","then","response","text","v","parse","product","parts","split","name","brand","price","review","rating","description","skintype","productImageUrl"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAYA,OAAO,MAAMC,WAAW,GAAG,MAA2B;AAClD,QAAMC,IAAI,GAAGC,KAAK,CAAC,0EAAD,CAAL,CACZC,IADY,CACPC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADL,EAEZF,IAFY,CAEPG,CAAC,IAAIP,IAAI,CAACQ,KAAL,CAAWD,CAAX,CAFE,CAAb;AAIA,SAAOL,IAAI,CAACE,IAAL,CAAUK,OAAO,IAAI;AACxB,UAAMC,KAAK,GAAGD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAd;AACA,WAAO;AACHC,MAAAA,IAAI,EAAEF,KAAK,CAAC,CAAD,CADR;AAEHG,MAAAA,KAAK,EAAEH,KAAK,CAAC,CAAD,CAFT;AAGHI,MAAAA,KAAK,EAAEJ,KAAK,CAAC,CAAD,CAHT;AAIHK,MAAAA,MAAM,EAAEL,KAAK,CAAC,CAAD,CAJV;AAKHM,MAAAA,MAAM,EAAEN,KAAK,CAAC,CAAD,CALV;AAMHO,MAAAA,WAAW,EAAEP,KAAK,CAAC,CAAD,CANf;AAOHQ,MAAAA,QAAQ,EAAER,KAAK,CAAC,CAAD,CAPZ;AAQHS,MAAAA,eAAe,EAAET,KAAK,CAAC,CAAD;AARnB,KAAP;AAUH,GAZM,CAAP;AAaH,CAlBM","sourcesContent":["import Papa from 'papaparse';\n\ninterface Product {\n    name: string;\n    brand: string;\n    price: string;\n    rating: number;\n    description: string;\n    skintype: string;\n    productImageUrl: string;\n}\n\nexport const getProducts = () : Promise<Product[]> => {\n    const data = fetch(\"https://julie-commerce.s3.us-west-2.amazonaws.com/moisturizer1_clean.csv\")\n    .then(response => response.text())\n    .then(v => Papa.parse(v)) as Promise<String[]>;\n    \n    return data.then(product => {\n        const parts = product.split(',')\n        return {\n            name: parts[0],\n            brand: parts[1],\n            price: parts[2],\n            review: parts[3],\n            rating: parts[4],\n            description: parts[5],\n            skintype: parts[6],\n            productImageUrl: parts[7]\n        }\n    }) as Promise<Product[]>;\n}"]},"metadata":{},"sourceType":"module"}